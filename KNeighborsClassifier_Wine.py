# -*- coding: utf-8 -*-
"""exemploAS_vinhos.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/16nR9SUzjPwgyHhHbga6MDjw5d4aAtbXz
"""

# Bibliotecas 
import pandas as pd

# Bliotecas de ML
# Treinamento e teste
from sklearn.model_selection import train_test_split
# Agrupamento
from sklearn.neighbors import KNeighborsClassifier
from sklearn.metrics import confusion_matrix
from sklearn.metrics import accuracy_score
from sklearn.metrics import precision_score

# Dados: Base de Dados Wine
# Importando a base de dados
csv_url = 'https://archive.ics.uci.edu/ml/machine-learning-databases/wine/wine.data'
nomesColunas = ['Classe', 'Alcohol', 'Malic Acid', 'Ash', 'Alcalinity of ash', 'Magnesium', 'Total phenols', 'Flavanoids','nonflavanoid phenols','Proanthocyanins', 'Color intensity', 'Hue', 'OD280/OD315 of diluted wines', 'Proline']
wine = pd.read_csv(csv_url, header = None, names = nomesColunas)

# Informações sobre o Dataframe
# wine.info()
# Ver os 5 primeiros
# wine.head()
# Ver os 5 últimos
# wine.tail()

# Pré-processamento dos dados
classe = wine['Classe'].value_counts()
classe

# Dividir o datasete 

# variável resposta
y = wine['Classe']

# variável de entrada
# iloc cria dataFrame
# :, 1: - Todas linhas, todas colunas de 1 para frente (não pega a 0)
x = wine.iloc[:,1:]

x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.3)

# Selecionar o algoritmo e treinar o modelo
knn = KNeighborsClassifier()
# comando para treinamento
knn.fit(x_train,y_train)

# Aplicação do método de predição
modelo = knn.predict(x_test)

# Matriz de Confusão
confusion_matrix(y_test, modelo)

# Acurácia
acuracia = accuracy_score(y_test, modelo)
acuracia
# -*- coding: utf-8 -*-
"""exemploAS_iris.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1l1TR1ucUlo_B_hKa3mUkT7-Y24v4RM48

1- Bibliotecas
"""

import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.neighbors import KNeighborsClassifier
from sklearn.metrics import confusion_matrix

"""2- Importar os dados"""

csv_url = 'https://archive.ics.uci.edu/ml/machine-learning-databases/iris/iris.data' 
col_names = ['Sepal_Length', 'Sepal_Width', 'Petal_Length', 'Petal_Width', 'Species']
iris = pd.read_csv(csv_url, names = col_names,  header = None)

"""3- Explorar os dados"""

# iris.info()
# iris.tail()
# iris.shape
# Mostra as classes
iris['Species'].unique()

# Convertendo o atributo de String para Inteiro
iris['Species_codigo'] = iris['Species'].apply(lambda x: 0 if x == 'Iris-setosa' else 1 if x == 'Iris-versicolor' else 2)
iris.tail()

"""4- Dividir o Dataset"""

y = iris['Species_codigo']
x = iris.iloc[:,0:4]

x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.3)

"""5- Algoritmo Classificador (treino)"""

modelo = KNeighborsClassifier()
modelo.fit(x_train,y_train)

"""6- Algoritmo Classificador (predição)"""

modelo.predict(x_test.iloc[0:10])

"""7- Algoritmo (acurácia)"""

print("Acurácia %.2f" %(modelo.score(x_test,y_test)))

"""8- Matriz de Confusão"""

confusion_matrix(y_test, modelo.predict(x_test))